function [fitresult, gof] = LegDecayFits(Stride, MS_Fast_Long_mean, MS_Fast_Short_mean, MS_Slow_Long_mean, MS_Slow_Short_mean)
%CREATEFITS(STRIDE,MS_FAST_LONG_MEAN,MS_FAST_SHORT_MEAN,MS_SLOW_LONG_MEAN,MS_SLOW_SHORT_MEAN)
%  Create fits.
%
%  Data for 'untitled fit 1' fit:
%      X Input : Stride
%      Y Output: MS_Fast_Long_mean
%  Data for 'untitled fit 2' fit:
%      X Input : Stride
%      Y Output: MS_Fast_Short_mean
%  Data for 'untitled fit 3' fit:
%      X Input : Stride
%      Y Output: MS_Slow_Long_mean
%  Data for 'untitled fit 4' fit:
%      X Input : Stride
%      Y Output: MS_Slow_Short_mean
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 15-Sep-2018 12:46:10

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 4, 1 );
gof = struct( 'sse', cell( 4, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( Stride, MS_Fast_Long_mean );

% Set up fittype and options.
ft = fittype( 'a*exp(-b*x)+c', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
%opts.StartPoint = [0.1 0.1 0.1];
%opts.StartPoint = [-0.1 0.1 0];
if mean(yData(6:20))>mean(yData(end-50:end))
    opts.StartPoint = [0.1 0.1 0];
else
    opts.StartPoint = [-0.1 0.1 0];
end


% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'MS_Fast_Long_mean vs. Stride', 'untitled fit 1', 'Location', 'NorthEast' );
% Label axes
xlabel Stride
ylabel MS_Fast_Long_mean
grid on

%% Fit: 'untitled fit 2'.
[xData, yData] = prepareCurveData( Stride, MS_Fast_Short_mean );

% Set up fittype and options.
ft = fittype( 'a*exp(-b*x)+c', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
%opts.StartPoint = [.1 .1 .1];
%opts.StartPoint = [-.1 .1 0];
if mean(yData(6:20))>mean(yData(end-50:end))
    opts.StartPoint = [0.1 0.1 0];
else
    opts.StartPoint = [-0.1 0.1 0];
end

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 2' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'MS_Fast_Short_mean vs. Stride', 'untitled fit 2', 'Location', 'NorthEast' );
% Label axes
xlabel Stride
ylabel MS_Fast_Short_mean
grid on

%% Fit: 'untitled fit 3'.
[xData, yData] = prepareCurveData( Stride, MS_Slow_Long_mean );

% Set up fittype and options.
ft = fittype( 'a*exp(-b*x)+c', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
%opts.StartPoint = [-0.1 0.1 -0.1];
%opts.StartPoint = [-0.1 0.1 0];
if mean(yData(6:20))>mean(yData(end-50:end))
    opts.StartPoint = [0.1 0.1 0];
else
    opts.StartPoint = [-0.1 0.1 0];
end

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 3' );
h = plot( fitresult{3}, xData, yData );
legend( h, 'MS_Slow_Long_mean vs. Stride', 'untitled fit 3', 'Location', 'NorthEast' );
% Label axes
xlabel Stride
ylabel MS_Slow_Long_mean
grid on

%% Fit: 'untitled fit 4'.
[xData, yData] = prepareCurveData( Stride, MS_Slow_Short_mean );

% Set up fittype and options.
ft = fittype( 'a*exp(-b*x)+c', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
%opts.StartPoint = [-0.1 0.1 -0.1];
%opts.StartPoint = [-0.1 0.1 0];
if mean(yData(6:20))>mean(yData(end-50:end))
    opts.StartPoint = [0.1 0.1 0];
else
    opts.StartPoint = [-0.1 0.1 0];
end

% Fit model to data.
[fitresult{4}, gof(4)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 4' );
h = plot( fitresult{4}, xData, yData );
legend( h, 'MS_Slow_Short_mean vs. Stride', 'untitled fit 4', 'Location', 'NorthEast' );
% Label axes
xlabel Stride
ylabel MS_Slow_Short_mean
grid on


